<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="erp.chain.mapper.MenuMapper">
    <resultMap id="BaseResultMap" type="erp.chain.domain.Menu">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Nov 04 15:05:01 CST 2016.
        -->
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="tenant_id" property="tenantId" jdbcType="BIGINT"/>
        <result column="menu_code" property="menuCode" jdbcType="VARCHAR"/>
        <result column="menu_name" property="menuName" jdbcType="VARCHAR"/>
        <result column="menu_type" property="menuType" jdbcType="TINYINT"/>
        <result column="memo" property="memo" jdbcType="VARCHAR"/>
        <result column="is_active" property="isActive" jdbcType="TINYINT"/>
        <result column="cron_start_at" property="cronStartAt" jdbcType="TIMESTAMP"/>
        <result column="cron_end_at" property="cronEndAt" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="create_at" property="createAt" jdbcType="TIMESTAMP"/>
        <result column="last_update_by" property="lastUpdateBy" jdbcType="VARCHAR"/>
        <result column="last_update_at" property="lastUpdateAt" jdbcType="TIMESTAMP"/>
        <result column="is_deleted" property="isDeleted" jdbcType="BIT"/>
        <result column="version" property="version" jdbcType="BIGINT"/>
    </resultMap>

    <insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Nov 04 15:05:01 CST 2016.
        -->
        insert into menu (id, tenant_id, menu_code,
        menu_name, menu_type, memo,
        is_active, cron_start_at, cron_end_at,
        status, create_by, create_at,last_update_by,
        last_update_at,is_deleted,version,create_branch_id
        )
        values (#{id,jdbcType=BIGINT},#{tenantId,jdbcType=BIGINT}, #{menuCode,jdbcType=VARCHAR}, #{menuName,jdbcType=VARCHAR},
        #{menuType,jdbcType=TINYINT}, #{memo,jdbcType=VARCHAR}, #{isActive,jdbcType=TINYINT},
        #{cronStartAt,jdbcType=TIMESTAMP}, #{cronEndAt,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT},
        #{createBy,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{lastUpdateBy,jdbcType=VARCHAR},
        #{lastUpdateAt,jdbcType=TIMESTAMP},#{isDeleted,jdbcType=BIT},#{version,jdbcType=BIGINT},#{createBranchId,jdbcType=BIGINT}
        )
    </insert>
    <update id="update" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Nov 04 15:05:01 CST 2016.
        -->
        update menu
        <set>
            <if test="tenantId != null">
                tenant_id = #{tenantId,jdbcType=BIGINT},
            </if>
            <if test="menuCode != null">
                menu_code = #{menuCode,jdbcType=CHAR},
            </if>
            <if test="menuName != null">
                menu_name = #{menuName,jdbcType=VARCHAR},
            </if>
            <if test="menuType != null">
                menu_type = #{menuType,jdbcType=BIGINT},
            </if>
            <if test="memo != null">
                memo = #{memo,jdbcType=VARCHAR},
            </if>
            <if test="isActive != null">
                is_active = #{isActive,jdbcType=TINYINT},
            </if>
            <if test="cronStartAt != null">
                cron_start_at = #{cronStartAt,jdbcType=TIMESTAMP},
            </if>
            <if test="cronEndAt != null">
                cron_end_at = #{cronEndAt,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createAt != null">
                create_at = #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateBy != null">
                last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateAt != null">
                last_update_at = #{lastUpdateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=BIT},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=BIGINT},
            </if>
            <if test="createBranchId != null">
                create_branch_id = #{createBranchId,jdbcType=BIGINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="queryMenu" resultType="mapUnderscoreToCamelCase">
        SELECT m.* FROM menu m LEFT JOIN branch_menu_r bmr
        ON m.id=bmr.menu_id
        WHERE m.is_deleted=0 AND m.tenant_id = ${tenantId}
        <if test="branchType !=0 and isManageGoods == 1">
            AND m.create_branch_id = ${branchId}
            AND bmr.branch_id=${branchId}
        </if>
        <if test="branchType !=0 and isManageGoods == 0">
            AND m.create_branch_id = (SELECT b.id FROM branch b WHERE b.tenant_id = ${tenantId} AND b.branch_type = 0)
            AND bmr.branch_id=#{branchId}
        </if>
        <if test="branchType == 0">
            AND m.create_branch_id = (SELECT b.id FROM branch b WHERE b.tenant_id = ${tenantId} AND b.branch_type = 0)
        </if>
        <if test="branchId == null or branchId == ''">
            AND m.create_branch_id = (SELECT b.id FROM branch b WHERE b.tenant_id = ${tenantId} AND b.branch_type = 0)
        </if>
        <if test="branchId != null and branchType != 0">
            AND bmr.branch_id=#{branchId}
        </if>
        <if test="codeOrName != null and codeOrName!=''">
            AND (m.menu_code LIKE '%${codeOrName}%' OR m.menu_name LIKE '%${codeOrName}%')
        </if>
        <if test="status != null and status!=''">
            AND m.status=#{status}
        </if>
        GROUP BY m.id
        ORDER BY m.id DESC
        <if test="offset != null and offset != '' and rows != null and rows != ''">
            LIMIT ${offset},${rows}
        </if>
    </select>
    <select id="queryMenuSum" resultType="Long">
        SELECT count(1) FROM (SELECT m.* FROM menu m LEFT JOIN branch_menu_r bmr
        ON m.id=bmr.menu_id
        WHERE m.is_deleted=0 AND m.tenant_id = ${tenantId}
        <if test="branchType !=0 and isManageGoods == 1">
            AND m.create_branch_id = #{branchId}
            AND bmr.branch_id=#{branchId}
        </if>
        <if test="branchType !=0 and isManageGoods == 0">
            AND m.create_branch_id = (SELECT b.id FROM branch b WHERE b.tenant_id = ${tenantId} AND b.branch_type = 0)
            AND bmr.branch_id=#{branchId}
        </if>
        <if test="branchType == 0">
            AND m.create_branch_id = (SELECT b.id FROM branch b WHERE b.tenant_id = ${tenantId} AND b.branch_type = 0)
        </if>
        <if test="branchId == null or branchId == ''">
            AND m.create_branch_id = (SELECT b.id FROM branch b WHERE b.tenant_id = ${tenantId} AND b.branch_type = 0)
        </if>
        <if test="branchId != null and branchType != 0">
            AND bmr.branch_id=#{branchId}
        </if>
        <if test="codeOrName != null and codeOrName!=''">
            AND (m.menu_code LIKE '%${codeOrName}%' OR m.menu_name LIKE '%${codeOrName}%')
        </if>
        <if test="status != null and status!=''">
            AND m.status=#{status}
        </if>
        GROUP BY m.id) a
    </select>
    <select id="getMenuById" resultType="erp.chain.domain.Menu">
        SELECT * FROM menu WHERE tenant_id=${tenantId} AND is_deleted=0 AND id=#{id}
    </select>
    <select id="getMenuGoods" resultType="mapUnderscoreToCamelCase">
        SELECT
    	    mg.id,
            mg.goods_code,
            mg.goods_id,
            mg.sale_price,
            mg.vip_price,
            mg.vip_price2,
            mg.menu_id,
            mg.create_at,
            mg.create_by,
            mg.last_update_at,
            mg.last_update_by,
            mg.is_deleted,
            mg.tenant_id,
            mg.is_package,
            mg.is_for_points,
            IF (
            g.standard_name IS NULL or g.standard_name="",
            g.goods_name,
            concat(g.goods_name,"(",g.standard_name,")")
            ) goods_name,
            g.category_id cat_id,
        	IF(g.goods_type = 2 AND g.category_id &lt; 0,g.category_name, c.cat_name) cat_name,
        	g.goods_unit_id unit_id,
        	g.goods_unit_name unit_name
        FROM
        	menu_goods mg
        INNER JOIN goods g ON g.id = mg.goods_id
        AND g.tenant_id = mg.tenant_id
        AND mg.tenant_id=${tenantId} AND mg.is_deleted=0 AND mg.menu_id=#{menuId}
        LEFT JOIN category c ON g.category_id = c.id
    </select>
    <select id="getMenuGoodsWithOrder" resultType="mapUnderscoreToCamelCase">
        SELECT m.* from (SELECT
        mg.id,
        mg.goods_code,
        mg.goods_id,
        mg.sale_price,
        mg.vip_price,
        mg.vip_price2,
        mg.menu_id,
        mg.create_at,
        mg.create_by,
        mg.last_update_at,
        mg.last_update_by,
        mg.is_deleted,
        mg.tenant_id,
        mg.is_package,
        mg.is_for_points,
        IF (
        g.standard_name IS NULL or g.standard_name="",
        g.goods_name,
        concat(g.goods_name,"(",g.standard_name,")")
        ) goods_name,
        g.category_id cat_id,
        IF(g.goods_type = 2 AND g.category_id &lt;0,g.category_name, c.cat_name) cat_name,
        g.goods_unit_id unit_id,
        g.goods_unit_name unit_name,
        g.bar_code
        FROM
        menu_goods mg
        INNER JOIN goods g ON g.id = mg.goods_id
        AND g.tenant_id = mg.tenant_id
        AND mg.tenant_id=#{tenantId} AND mg.is_deleted=0 AND mg.menu_id=#{menuId}
        LEFT JOIN category c ON g.category_id = c.id
        )m LEFT JOIN category_order co ON m.cat_id=co.cat_id AND m.tenant_id=co.tenant_id AND co.branch_id=#{branchId}
        LEFT JOIN goods_order go ON m.goods_id=go.goods_id AND m.tenant_id=go.tenant_id AND go.branch_id=#{branchId}
        ORDER BY if( co.order_id is null,0,1),co.order_id,if(m.cat_id=-9900,0,1),m.cat_id,if( go.order_id is null,0,1),go.order_id,m.goods_id ASC
    </select>
    <select id="getMenuBranch" resultType="mapUnderscoreToCamelCase">
        SELECT * FROM branch WHERE tenant_id=${tenantId} AND id in (SELECT branch_id FROM branch_menu_r WHERE menu_id=#{menuId}) AND is_deleted=0
    </select>
    <delete id="delMenuBranch" >
        DELETE FROM branch_menu_r WHERE menu_id=#{menuId}
    </delete>
    <delete id="delMenuGoods" >
        DELETE FROM menu_goods WHERE tenant_id=${tenantId} AND menu_id=#{menuId}
    </delete>
    <select id="getMenuCode" resultType="String">
        SELECT MAX(b.menu_code) FROM menu b where b.menu_code like '${code}%' and b.tenant_id=${tenantId}
    </select>



    <insert id="insertMenuGoods" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Nov 04 15:05:01 CST 2016.
        -->
        insert into menu_goods (id, goods_code, goods_id,
        goods_name, sale_price, vip_price,vip_price2,
        menu_id, create_by, create_at,last_update_by,
        last_update_at,is_deleted,tenant_id,is_package,
        is_for_points
        )
        values (#{id},#{goodsCode}, #{goodsId}, #{goodsName},
        #{salePrice}, #{vipPrice}, #{vipPrice2},
        #{menuId}, #{createBy}, #{createAt}, #{lastUpdateBy},
        #{lastUpdateAt},#{isDeleted},${tenantId},#{isPackage},#{isForPoints}
        )
    </insert>
    <insert id="insertBranchMenuR" parameterType="Map">
        INSERT INTO branch_menu_r(id,branch_id,menu_id,tenant_id) VALUES (NULL ,${branchId},${menuId},${tenantId})
    </insert>
    <select id="getMenuInfo" resultType="mapUnderscoreToCamelCase">
        select * from v_menu_info m LEFT JOIN category_order co ON m.category_id=co.cat_id AND co.tenant_id=m.tenant_id AND co.branch_id=m.branch_id
        LEFT JOIN goods_order go ON m.goods_id=go.goods_id AND go.tenant_id=m.tenant_id AND go.branch_id=m.branch_id
        where m.tenant_id = ${tenantId} and m.branch_id = ${branchId} and m.menu_type in(${menuType})
        ORDER BY if(m.category_id=-9900,1,0),if( co.order_id is null,0,1),co.order_id,m.category_id,if( go.order_id is null,0,1),go.order_id,m.goods_id ASC
    </select>
    <select id="findMenuGoods" resultType="mapUnderscoreToCamelCase">
            SELECT
        	group_.goods_id,
        	group_.package_id,
        	group_.quantity,
        	IF (
                    g.standard_name IS NULL or g.standard_name="",
                    g.goods_name,
                    concat(g.goods_name,"(",g.standard_name,")")
                    ) goods_name
            FROM
        	(
        		SELECT
        			pg.package_id,
        			gg.goods_id,
        			gg.quantity,
        			gg.tenant_id,
        			gg.branch_id
        		FROM
        			package_group pg
        		LEFT JOIN group_goods gg ON pg.tenant_id = gg.tenant_id
		        AND gg.group_id = pg.id
		        WHERE
			        pg.tenant_id = ${tenantId}
		        AND pg.is_main = 1
		        AND pg.is_deleted = 0
		        AND gg.is_deleted = 0
        	) group_
            INNER JOIN goods g ON g.tenant_id = group_.tenant_id
            AND g.id = group_.goods_id
            WHERE
      	      g.tenant_id = ${tenantId}
            AND group_.package_id = #{goodsId}
            AND g.is_deleted = 0
    </select>
    <!--自营机构菜牌状态设置-->
    <update id="menuStatusSetting"  parameterType="map">
        UPDATE menu SET status = #{status,jdbcType=TINYINT},last_update_at = #{lastUpdateAt,jdbcType=TIMESTAMP} WHERE is_deleted = 0 AND create_branch_id = #{createBranchId,jdbcType=BIGINT}
    </update>

    <!--导出电子秤商品-->
    <select id="exportWeighGoods" resultType="mapUnderscoreToCamelCase">
        SELECT g.goods_name, g.weigh_plu,mg.sale_price FROM goods g INNER JOIN menu_goods mg ON g.id = mg.goods_id AND g.tenant_id = mg.tenant_id
        WHERE g.tenant_id = ${tenantId}
        <if test="onlySelf == 0">
            AND (g.branch_id = ${branchId} OR g.branch_id = (SELECT id FROM branch WHERE tenant_id = ${tenantId} AND branch_type = 0))
        </if>
        <if test="onlySelf == 1">
            AND g.branch_id = ${branchId}
        </if>
        AND g.is_weigh = 1
        AND g.weigh_plu IS NOT NULL
        AND g.is_deleted = 0 AND g.id IN(SELECT goods_id FROM menu_goods WHERE tenant_id = ${tenantId} AND is_deleted = 0 AND menu_id = ${menuId})
    </select>
</mapper>