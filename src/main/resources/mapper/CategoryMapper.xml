<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="erp.chain.mapper.CategoryMapper" >
  <resultMap id="BaseResultMap" type="erp.chain.domain.Category" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 04 15:05:01 CST 2016.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="tenant_id" property="tenantId" jdbcType="BIGINT" />
    <result column="cat_code" property="catCode" jdbcType="CHAR" />
    <result column="cat_name" property="catName" jdbcType="VARCHAR" />
    <result column="mnemonics" property="mnemonics" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="is_discount" property="isDiscount" jdbcType="BIT" />
    <result column="is_store" property="isStore" jdbcType="BIT" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="last_update_by" property="lastUpdateBy" jdbcType="VARCHAR" />
    <result column="last_update_at" property="lastUpdateAt" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
    <result column="parent_name" property="parentName" jdbcType="VARCHAR" />
    <result column="category_type" property="categoryType" jdbcType="TINYINT" />
    <result column="branch_id" property="branchId" jdbcType="BIGINT" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="local_id" property="localId" jdbcType="BIGINT" />
  </resultMap>

  <insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="id" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 04 15:05:01 CST 2016.
    -->
    insert into category (id, tenant_id, cat_code,
      cat_name, mnemonics, parent_id, 
      is_discount, is_store, create_by, 
      create_at, last_update_by, last_update_at, 
      is_deleted, parent_name, category_type, 
      branch_id, version, local_id
      )
    values (#{id,jdbcType=BIGINT}, #{tenantId,jdbcType=BIGINT}, #{catCode,jdbcType=CHAR},
      #{catName,jdbcType=VARCHAR}, #{mnemonics,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, 
      #{isDiscount,jdbcType=BIT}, #{isStore,jdbcType=BIT}, #{createBy,jdbcType=VARCHAR}, 
      #{createAt,jdbcType=TIMESTAMP}, #{lastUpdateBy,jdbcType=VARCHAR}, #{lastUpdateAt,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=BIT}, #{parentName,jdbcType=VARCHAR}, #{categoryType,jdbcType=TINYINT}, 
      #{branchId,jdbcType=BIGINT}, #{version,jdbcType=BIGINT}, #{localId,jdbcType=BIGINT}
      )
  </insert>

  <update id="update" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 04 15:05:01 CST 2016.
    -->
    update category
    <set >
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="catCode != null" >
        cat_code = #{catCode,jdbcType=CHAR},
      </if>
      <if test="catName != null" >
        cat_name = #{catName,jdbcType=VARCHAR},
      </if>
      <if test="mnemonics != null" >
        mnemonics = #{mnemonics,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="isDiscount != null" >
        is_discount = #{isDiscount,jdbcType=BIT},
      </if>
      <if test="isStore != null" >
        is_store = #{isStore,jdbcType=BIT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null" >
        last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateAt != null" >
        last_update_at = #{lastUpdateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="parentName != null" >
        parent_name = #{parentName,jdbcType=VARCHAR},
      </if>
      <if test="categoryType != null" >
        category_type = #{categoryType,jdbcType=TINYINT},
      </if>
      <if test="branchId != null" >
        branch_id = #{branchId,jdbcType=BIGINT},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="localId != null" >
        local_id = #{localId,jdbcType=BIGINT},
      </if>
      <if test="scoreType != null" >
        score_type = #{scoreType,jdbcType=BIGINT},
      </if>
      <if test="scoreValue != null" >
        score_value = #{scoreValue,jdbcType=BIGINT},
      </if>
      <if test="scorePercent != null" >
        score_percent = #{scorePercent,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <!--修改子分类的上级分类名称-->
  <update id="updateSubName"  parameterType="map">
      UPDATE category SET parent_name = '${parentName}' WHERE parent_id = ${parentId} AND is_deleted = 0 AND tenant_id = ${tenantId};
  </update>

  <select id="farmCatList" resultType="mapUnderscoreToCamelCase">
    SELECT * from category t where t.is_deleted = 0
    <if test="tenantId != null">
      AND t.tenant_id = ${tenantId}
    </if>
    <if test="parentId != null">
      AND t.parent_id=#{parentId}
    </if>
    <if test="branchId != null">
      AND t.branch_id = ${branchId}
    </if>
    <if test="categoryInfo != null">
      AND (t.cat_code like '%${categoryInfo}%' or t.cat_name like '%${categoryInfo}%')
    </if>
    <if test="order==null and field==null">
      ORDER BY t.create_at ASC
    </if>
    <if test="order!=null and field!=null">
      ORDER BY t.${field} ${order}
    </if>
    <if test="offset != null and rows != null">
      LIMIT ${offset},${rows}
    </if>
  </select>
  <select id="farmCatListCount" resultType="Long">
    SELECT count(1) from category t where t.is_deleted = 0
    <if test="tenantId != null">
      AND t.tenant_id = ${tenantId}
    </if>
    <if test="parentId != null">
      AND t.parent_id=#{parentId}
    </if>
    <if test="branchId != null">
      AND t.branch_id = ${branchId}
    </if>
    <if test="categoryInfo != null">
      AND (t.cat_code like '%${categoryInfo}%' or t.cat_name like '%${categoryInfo}%')
    </if>
  </select>

  <select id="queryCatList" resultMap="BaseResultMap">
      SELECT t.id, t.tenant_id, t.cat_code, t.cat_name, t.mnemonics, t.parent_id, t.is_discount, t.is_store, t.create_by, t.create_at,
      t.last_update_by, t.last_update_at, t.is_deleted, t.parent_name, t.category_type, t.branch_id, t.version, t.local_id,
      csi.score_type, csi.score_value, csi.score_percent from category t LEFT JOIN category_score_info csi ON t.id = csi.cat_id
      where t.is_deleted = 0 AND t.tenant_id=#{tenantId,jdbcType=BIGINT}
    <if test="categoryInfo != null">
      AND (t.cat_code like '%${categoryInfo}%' or t.cat_name like '%${categoryInfo}%')
    </if>
    <if test="categoryStr != null">
      AND  t.cat_name=#{categoryStr}
    </if>
    <if test="parentId != null">
      AND t.parent_id=#{parentId}
    </if>
    <if test="onlySelf == 1">
      AND t.branch_id = ${branchId}
    </if>
    ORDER BY t.id
    LIMIT #{offset,jdbcType=INTEGER},#{rows,jdbcType=INTEGER}
  </select>
  <select id="queryCats" resultType="Category">
    SELECT * from category t where t.is_deleted = 0
    <if test="tenantId != null">
      AND t.tenant_id = ${tenantId}
    </if>
    <if test="parentId != null">
      AND t.parent_id=#{parentId}
    </if>
    <if test="onlySelf == 1">
      AND t.branch_id = ${branchId}
    </if>
  </select>
  <select id="queryCatTreeData" resultType="mapUnderscoreToCamelCase">
    <![CDATA[
            SELECT * from category t where t.is_deleted = 0
            AND t.tenant_id=#{tenantId,jdbcType=BIGINT}
        ]]>
    <if test="notHaveMaterial  == 1">
      <![CDATA[AND t.categroy_type=0]]>
    </if>
    <if test="onlySelf == 1">
      AND t.branch_id = ${branchId}
    </if>
    <if test="branchIds != null and branchIds != ''">
      AND t.branch_id IN (${branchIds})
    </if>
  </select>
  <select id="queryUnitCount" resultType="long" >
    <![CDATA[
            SELECT count(1) from category t where t.is_deleted = 0
            AND t.tenant_id=#{tenantId,jdbcType=BIGINT}
        ]]>
    <if test="categoryInfo != null">
      <![CDATA[AND (t.cat_code like '%${categoryInfo}%' or t.cat_name like '%${categoryInfo}%')]]>
    </if>
    <if test="parentId != null">
      <![CDATA[AND t.parent_id=#{parentId}]]>
    </if>
    <if test="onlySelf == 1">
      AND t.branch_id = ${branchId}
    </if>
  </select>
  <select id="queryCatById" resultType="Category">
    SELECT * FROM  category WHERE tenant_id=${tenantId} AND id=#{id}
  </select>
  <select id="getCatsGoodsUsed" resultType="Category">
    select c.* from goods g INNER JOIN category c ON g.tenant_id=c.tenant_id AND g.category_id=c.id AND c.is_deleted=0
    where g.tenant_id=${tenantId} AND g.is_deleted=0 GROUP BY c.id,c.tenant_id
  </select>
  <select id="checkName" resultType="long" >
    SELECT count(1) FROM category g WHERE g.is_deleted=0 AND g.tenant_id=${tenantId} AND g.cat_name=#{catName}
    <if test="id != null and id!=''">
      <![CDATA[AND g.id!=#{id}]]>
    </if>
    <if test="tenantBusiness != null and tenantBusiness == 6">
      AND g.branch_id = ${branchId}
    </if>
  </select>
  <select id="getFirstCatCode" resultType="String">
    SELECT b.cat_code FROM category b where b.parent_id = -1 AND b.tenant_id=${tenantId} AND b.is_deleted=0 ORDER BY b.cat_code+0 DESC LIMIT 1
  </select>
  <select id="countByCategoryIdAndTenantId" resultType="int">
    SELECT count(1) FROM goods g WHERE g.category_id=#{catId} AND g.tenant_id=${tenantId} AND g.is_deleted=0
  </select>
  <select id="countByParentIdAndTenantId" resultType="int">
    SELECT count(1) FROM category g WHERE g.parent_id=#{catId} AND g.tenant_id=${tenantId} AND g.is_deleted=0
  </select>
  <select id="getSecondCatCode" resultType="String">
    SELECT b.cat_code FROM category b where b.tenant_id=${tenantId} AND b.parent_id != -1 AND b.cat_code LIKE '${oneCode}%' AND LENGTH(b.cat_code)=4 AND b.is_deleted=0 ORDER BY b.cat_code+0 DESC LIMIT 1
  </select>
  <select id="findByTenantIdAndIsDeleted" resultType="erp.chain.domain.Category">
    SELECT * FROM category WHERE tenant_id = ${tenantId} AND is_deleted = 0 LIMIT 0, 1
  </select>
  <select id="getByName" resultType="erp.chain.domain.Category">
    SELECT * FROM category WHERE tenant_id = ${tenantId} AND is_deleted=0 AND cat_name=#{catName}
  </select>
  <delete id="deleteCategoryOrder">
    DELETE FROM category_order WHERE branch_id=${branchId} AND tenant_id=${tenantId}
    AND cat_id in(
    <foreach item="item" collection="catJsonArr" separator=",">
      #{item.catId,jdbcType=BIGINT}
    </foreach>
    )
  </delete>
  <insert id="insertCatOrder">
    insert into category_order (tenant_id, branch_id,cat_id, order_id)
    values
    <foreach item="item" collection="catJsonArr" separator=",">
      (#{tenantId,jdbcType=BIGINT}, #{branchId,jdbcType=BIGINT}, #{item.catId,jdbcType=BIGINT},
      #{item.orderId,jdbcType=BIGINT})
    </foreach>
  </insert>
  <update id="updateLastUpdateAt">
    UPDATE category SET last_update_at=now() WHERE id in (
    <foreach item="item" collection="catJsonArr" separator=",">
      #{item.catId,jdbcType=BIGINT}
    </foreach>
    )
  </update>
  <select id="listOrderCategory" resultType="mapUnderscoreToCamelCase">
    SELECT
    *
    FROM
    (
    (
    SELECT
    c.*, co.order_id
    FROM
    category c
    LEFT JOIN category_order co ON c.id = co.cat_id
    AND c.tenant_id = co.tenant_id
    WHERE
    c.is_deleted = 0
    AND c.tenant_id = ${tenantId}
    AND co.branch_id = ${branchId}
    AND c.parent_id = -1
    )
    UNION ALL
    (
    SELECT
    ca.*, NULL order_id
    FROM
    category ca
    WHERE
    ca.is_deleted = 0
    AND ca.tenant_id = ${tenantId}
    <if test="tenantBusiness != null and tenantBusiness == 6">
        AND ca.branch_id = #{branchId}
    </if>
    AND ca.parent_id = -1
    AND ca.id NOT IN (
    SELECT
    co.cat_id
    FROM
    category c
    LEFT JOIN category_order co ON c.id = co.cat_id
    AND c.tenant_id = co.tenant_id
    WHERE
    c.is_deleted = 0
    AND c.tenant_id = ${tenantId}
    AND co.branch_id = ${branchId}
    AND c.parent_id = -1
    )
    )
    ) t
    ORDER BY
    t.order_id,t.id ASC
  </select>
  <select id="listOrderSecondCategory" resultType="mapUnderscoreToCamelCase">
    SELECT
    *
    FROM
    (
    (
    SELECT
    c.*, co.order_id
    FROM
    category c
    LEFT JOIN category_order co ON c.id = co.cat_id
    AND c.tenant_id = co.tenant_id
    WHERE
    c.is_deleted = 0
    AND c.tenant_id = ${tenantId}
    AND co.branch_id = ${branchId}
    AND c.parent_id != -1
    )
    UNION ALL
    (
    SELECT
    ca.*, NULL order_id
    FROM
    category ca
    WHERE
    ca.is_deleted = 0
    AND ca.tenant_id = ${tenantId}
    AND ca.parent_id != -1
    AND ca.id NOT IN (
    SELECT
    co.cat_id
    FROM
    category c
    LEFT JOIN category_order co ON c.id = co.cat_id
    AND c.tenant_id = co.tenant_id
    WHERE
    c.is_deleted = 0
    AND c.tenant_id = ${tenantId}
    AND co.branch_id = ${branchId}
    AND c.parent_id != -1
    )
    )
    ) t
    <if test="firstCatId!=null">
      WHERE t.parent_id=#{firstCatId}
    </if>
    ORDER BY
    t.order_id,t.id ASC
  </select>
  <select id="getCategoryScoreInfo" resultType="mapUnderscoreToCamelCase">
    SELECT * FROM category_score_info WHERE tenant_id=#{tenantId} AND cat_id=#{catId} limit 1
  </select>

  <delete id="deleteCategoryScore">
    DELETE FROM category_score_info WHERE tenant_id=${tenantId} AND cat_id=${categoryId}
  </delete>

  <insert id="saveCategoryScore">
    INSERT INTO category_score_info(cat_id,tenant_id,branch_id,score_type,score_value,score_percent)
    VALUES (#{catId},#{tenantId},#{branchId},#{scoreType},#{scoreValue},#{scorePercent})
  </insert>

  <select id="findAll" resultType="mapUnderscoreToCamelCase">
    select id, cat_name from category where tenant_id = #{tenantId} and is_deleted = 0
    <if test="tenantBusiness != null and tenantBusiness == 6">
        AND branch_id = #{branchId}
    </if>
  </select>

  <update id="doUpdatePosStatus" parameterType="map" >
    update category
    <set >
      <if test="lastUpdateBy != null" >
        last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateAt != null" >
        last_update_at = #{lastUpdateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="categoryType != null" >
        category_type = #{categoryType,jdbcType=TINYINT}
      </if>
    </set>
    where
      parent_id = #{parentId}
    AND
      tenant_id = #{tenantId}
    AND is_deleted = 0
  </update>
  <select id="getSecondByParentId" resultType="erp.chain.domain.Category">
    select * from category where tenant_id=#{tenantId} and parent_id=#{parentId} and is_deleted=0
  </select>
  <select id="getCatOrderId" resultType="long">
    select order_id from category_order where tenant_id=#{tenantId} and branch_id=#{branchId} and cat_id=#{catId}
  </select>
  <select id="orderedCategory" resultType="mapUnderscoreToCamelCase">
    select * from category_order where tenant_id=#{tenantId} and branch_id=#{branchId}
  </select>
</mapper>