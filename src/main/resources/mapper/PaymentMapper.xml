<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="erp.chain.mapper.PaymentMapper" >
  <resultMap id="BaseResultMap" type="erp.chain.domain.Payment" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 04 15:05:01 CST 2016.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="payment_code" property="paymentCode" jdbcType="CHAR" />
    <result column="payment_name" property="paymentName" jdbcType="VARCHAR" />
    <result column="payment_status" property="paymentStatus" jdbcType="TINYINT" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="last_update_by" property="lastUpdateBy" jdbcType="VARCHAR" />
    <result column="last_update_at" property="lastUpdateAt" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
    <result column="tenant_id" property="tenantId" jdbcType="BIGINT" />
    <result column="branch_id" property="branchId" jdbcType="BIGINT" />
    <result column="is_score" property="isScore" jdbcType="TINYINT" />
    <result column="fix_value" property="fixValue" jdbcType="DECIMAL" />
    <result column="fix_num" property="fixNum" jdbcType="INTEGER" />
    <result column="payment_type" property="paymentType" jdbcType="TINYINT" />
    <result column="is_voucher" property="isVoucher" jdbcType="TINYINT" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="local_id" property="localId" jdbcType="BIGINT" />
  </resultMap>

  <insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="id" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 04 15:05:01 CST 2016.
    -->
    insert into payment (id, payment_code, payment_name, 
      payment_status, create_by, create_at, 
      last_update_by, last_update_at, is_deleted, 
      tenant_id, branch_id, is_score, 
      fix_value, fix_num, payment_type, 
      is_voucher, version, local_id,is_store,is_open_cashbox
      )
    values (#{id,jdbcType=BIGINT}, #{paymentCode,jdbcType=CHAR}, #{paymentName,jdbcType=VARCHAR}, 
      #{paymentStatus,jdbcType=TINYINT}, #{createBy,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, 
      #{lastUpdateBy,jdbcType=VARCHAR}, #{lastUpdateAt,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}, 
      #{tenantId,jdbcType=BIGINT}, #{branchId,jdbcType=BIGINT}, #{isScore,jdbcType=TINYINT}, 
      #{fixValue,jdbcType=DECIMAL}, #{fixNum,jdbcType=INTEGER}, #{paymentType,jdbcType=TINYINT}, 
      #{isVoucher,jdbcType=TINYINT}, #{version,jdbcType=BIGINT}, #{localId,jdbcType=BIGINT},#{isStore,jdbcType=BIT},#{isOpenCashbox,jdbcType=BIT}
      )
  </insert>

  <update id="updateOrderNumber">
    update payment set order_number = ${orderNumber},last_update_at=now() WHERE id=${id} AND branch_id=${branchId} AND is_deleted=0
  </update>
  <update id="updateBranchOrderNumber">
    update payment_branch set order_number = ${orderNumber},last_update_at=now() WHERE tenant_payment_id=${id} AND branch_id=${branchId} AND is_deleted=0
  </update>

  <update id="update" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 04 15:05:01 CST 2016.
    -->
    update payment
    <set >
      <if test="paymentCode != null" >
        payment_code = #{paymentCode,jdbcType=CHAR},
      </if>
      <if test="paymentName != null" >
        payment_name = #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="paymentStatus != null" >
        payment_status = #{paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null" >
        last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateAt != null" >
        last_update_at = #{lastUpdateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="branchId != null" >
        branch_id = #{branchId,jdbcType=BIGINT},
      </if>
      <if test="isScore != null" >
        is_score = #{isScore,jdbcType=TINYINT},
      </if>
      <if test="fixValue != null" >
        fix_value = #{fixValue,jdbcType=DECIMAL},
      </if>
      <if test="fixNum != null" >
        fix_num = #{fixNum,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="isVoucher != null" >
        is_voucher = #{isVoucher,jdbcType=TINYINT},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="localId != null" >
        local_id = #{localId,jdbcType=BIGINT},
      </if>
      <if test="isStore != null" >
        is_store = #{isStore,jdbcType=BIT},
      </if>
      <if test="isOpenCashbox != null" >
        is_open_cashbox = #{isOpenCashbox,jdbcType=BIT},
      </if>
      <if test="orderNumber != null">
          order_number = #{orderNumber,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="listBranchAllPayment" resultType="erp.chain.domain.Payment">
    SELECT * FROM ((SELECT tenant_payment_id id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,
    tenant_id,branch_id,is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,
    if(is_open_cashbox=0,false,true) is_open_cashbox,order_number
    FROM payment_branch WHERE is_deleted=0 AND tenant_id = ${tenantId} AND branch_id=${branchId}
    )
    UNION ALL
    (SELECT id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,tenant_id,branch_id,
    is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,
    if(is_open_cashbox=0,false,true) is_open_cashbox,order_number
    FROM payment WHERE is_deleted=0 AND tenant_id = ${tenantId} AND branch_id=${branchId} AND payment_code != 'MT' AND payment_code != 'ELM'
    ))t
  </select>

  <select id="queryPayment" resultType="mapUnderscoreToCamelCase">
    SELECT t.*,b.name branch_name FROM ((SELECT tenant_payment_id id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,
    tenant_id,branch_id,is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,
      if(is_open_cashbox=0,false,true) is_open_cashbox,order_number
    FROM payment_branch WHERE is_deleted=0 AND tenant_id = ${tenantId} AND branch_id=${branchId}
    <if test="nameOrCode != null and nameOrCode !=''" >
      AND (payment_code LIKE '%${nameOrCode}%' OR payment_name LIKE '%${nameOrCode}%')
    </if>
    <if test="paymentStatus != null and paymentStatus != ''">
      AND payment_status = ${paymentStatus}
    </if>
    <if test="noCash != null and noCash == 'true'">
      AND id NOT IN (SELECT id FROM payment_branch WHERE tenant_id = ${tenantId} AND branch_id=${branchId} AND payment_code = 'CSH')
    </if>
    )
    UNION ALL
    (SELECT id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,tenant_id,branch_id,
    is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,
      if(is_open_cashbox=0,false,true) is_open_cashbox,order_number
    FROM payment WHERE is_deleted=0 AND tenant_id = ${tenantId} AND branch_id=${branchId} AND payment_code != 'MT' AND payment_code != 'ELM'
    <if test="nameOrCode != null and nameOrCode !=''" >
      AND (payment_code LIKE '%${nameOrCode}%' OR payment_name LIKE '%${nameOrCode}%')
    </if>
    <if test="paymentStatus != null and paymentStatus != ''">
      AND payment_status = ${paymentStatus}
    </if>
    <if test="noCash != null and noCash == 'true'">
      AND id NOT IN (SELECT id FROM payment WHERE tenant_id = ${tenantId} AND branch_id=${branchId} AND payment_code = 'CSH')
    </if>
    ))t
    LEFT JOIN branch b ON b.tenant_id = t.tenant_id AND b.id = t.branch_id
    <if test="order==null and field==null">
      ORDER BY if(isnull(t.order_number),1,0),t.order_number ASC,payment_status ASC,id ASC
    </if>
    <if test="order!=null and field!=null">
      ORDER BY t.${field} ${order}
    </if>
    <if test="rows != null and offset !=null" >
      LIMIT ${offset},${rows}
    </if>
  </select>
  <select id="queryPaymentSum" resultType="Long">
    select count(*) from ((SELECT tenant_payment_id id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,
    tenant_id,branch_id,is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,if(is_open_cashbox=0,false,true) is_open_cashbox
    FROM payment_branch WHERE is_deleted=0 AND tenant_id = ${tenantId} AND branch_id=${branchId}
    <if test="nameOrCode != null and nameOrCode !=''" >
      AND (payment_code LIKE '%${nameOrCode}%' OR payment_name LIKE '%${nameOrCode}%')
    </if>
    <if test="paymentStatus != null and paymentStatus != ''">
      AND payment_status = ${paymentStatus}
    </if>
    <if test="noCash != null and noCash == 'true'">
      AND id NOT IN (SELECT id FROM payment_branch WHERE tenant_id = ${tenantId} AND branch_id=${branchId} AND payment_code = 'CSH')
    </if>
    )
    UNION ALL
    (SELECT id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,tenant_id,branch_id,
    is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,if(is_open_cashbox=0,false,true) is_open_cashbox
    FROM payment WHERE is_deleted=0 AND tenant_id = ${tenantId} AND branch_id=${branchId} AND payment_code != 'MT' AND payment_code != 'ELM'
    <if test="nameOrCode != null and nameOrCode !=''" >
      AND (payment_code LIKE '%${nameOrCode}%' OR payment_name LIKE '%${nameOrCode}%')
    </if>
    <if test="paymentStatus != null and paymentStatus != ''">
      AND payment_status = ${paymentStatus}
    </if>
    <if test="noCash != null and noCash == 'true'">
      AND id NOT IN (SELECT id FROM payment WHERE tenant_id = ${tenantId} AND branch_id=${branchId} AND payment_code = 'CSH')
    </if>
    )) pay_
  </select>
  <select id="getMainPayments" resultType="erp.chain.domain.Payment">
    SELECT * FROM payment WHERE tenant_id=${tenantId} AND branch_id=${branchId} AND is_deleted=0
  </select>
  <select id="listBranchsPayment" resultType="erp.chain.domain.Payment">
    SELECT * FROM ((SELECT tenant_payment_id id,payment_code,payment_name
    FROM payment_branch WHERE  tenant_id = ${tenantId} AND branch_id in (${branchId})
    )
    UNION ALL
    (SELECT id,payment_code,payment_name
    FROM payment WHERE  tenant_id = ${tenantId} AND branch_id  in (${branchId})
    ))t ORDER BY t.id ASC
  </select>
  <select id="getPaymentById" resultType="erp.chain.domain.Payment">
    SELECT * FROM payment WHERE tenant_id=${tenantId} AND id=#{id} AND is_deleted=0
  </select>
  <select id="getPaymentByConditions" resultType="erp.chain.domain.Payment">
    SELECT * FROM payment WHERE tenant_id=${tenantId} AND branch_id = ${branchId} AND id=#{id} AND is_deleted=0
  </select>
  <select id="getPaymentByIdAll" resultType="erp.chain.domain.Payment">
    SELECT * FROM payment WHERE tenant_id=${tenantId} AND id=#{id}
  </select>
  <select id="checkPaymentName" resultType="Long">
    SELECT count(1) FROM payment WHERE tenant_id=${tenantId} AND payment_name=#{name} AND branch_id=#{branchId}  AND is_deleted=0
    <if test="id != null and id !=''" >
      AND id!=#{id}
    </if>
  </select>
  <select id="checkPaymentBranchName" resultType="Long">
  SELECT  count(1) FROM payment_branch WHERE  tenant_id=#{tenantId} AND payment_name=#{name} AND branch_id=#{branchId} AND is_deleted=0
    <if test="id != null and id !=''" >
      AND id!=#{id}
    </if>
  </select>
  <select id="checkStatus" resultType="Long">
    select count(*) from ((SELECT tenant_payment_id id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,
    tenant_id,branch_id,is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,if(is_open_cashbox=0,false,true) is_open_cashbox
    FROM payment_branch WHERE is_deleted=0 AND tenant_id = ${tenantId} AND branch_id=${branchId}
    )
    UNION ALL
    (SELECT id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,tenant_id,branch_id,
    is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,if(is_open_cashbox=0,false,true) is_open_cashbox
    FROM payment WHERE is_deleted=0 AND tenant_id = ${tenantId} AND branch_id=${branchId}
    )) pay_ where pay_.payment_status=0
    <if test="id != null and id !=''" >
      AND pay_.id!=#{id}
    </if>
  </select>
  <select id="getMaxCode" resultType="String">
    SELECT MAX(p.payment_code) payment_code FROM payment p WHERE p.tenant_id=${tenantId} AND p.payment_code LIKE '%${code}%'
  </select>
  <insert id="insertBranchPayment" parameterType="map" useGeneratedKeys="true" keyProperty="id" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 04 15:05:01 CST 2016.
    -->
    insert into payment_branch (id,tenant_payment_id, payment_code, payment_name,
    payment_status, create_by, create_at,
    last_update_by, last_update_at, is_deleted,
    tenant_id, branch_id, is_score,
    fix_value, fix_num, payment_type,
    is_voucher, version, local_id,is_store,is_open_cashbox
    )
    values (#{id,jdbcType=BIGINT},#{tenantPaymentId,jdbcType=BIGINT}, #{paymentCode,jdbcType=CHAR}, #{paymentName,jdbcType=VARCHAR},
    #{paymentStatus,jdbcType=TINYINT}, #{createBy,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP},
    #{lastUpdateBy,jdbcType=VARCHAR}, #{lastUpdateAt,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT},
    #{tenantId,jdbcType=BIGINT}, #{branchId,jdbcType=BIGINT}, #{isScore,jdbcType=TINYINT},
    #{fixValue,jdbcType=DECIMAL}, #{fixNum,jdbcType=INTEGER}, #{paymentType,jdbcType=TINYINT},
    #{isVoucher,jdbcType=TINYINT}, #{version,jdbcType=BIGINT}, #{localId,jdbcType=BIGINT},#{isStore,jdbcType=BIT},#{isOpenCashbox,jdbcType=BIT}
    )
  </insert>
  <select id="listPaymentBranchByPaymentId" resultType="erp.chain.domain.PaymentBranch">
    SELECT * FROM payment_branch WHERE is_deleted=0 AND tenant_payment_id=#{paymentId}
  </select>
  <update id="updatePaymentBranch" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 04 15:05:01 CST 2016.
    -->
    update payment_branch
    <set >
      <if test="paymentCode != null" >
        payment_code = #{paymentCode,jdbcType=CHAR},
      </if>
      <if test="paymentName != null" >
        payment_name = #{paymentName,jdbcType=VARCHAR},
      </if>
      <if test="paymentStatus != null" >
        payment_status = #{paymentStatus,jdbcType=TINYINT},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null" >
        last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateAt != null" >
        last_update_at = #{lastUpdateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="branchId != null" >
        branch_id = #{branchId,jdbcType=BIGINT},
      </if>
      <if test="isScore != null" >
        is_score = #{isScore,jdbcType=TINYINT},
      </if>
      <if test="fixValue != null" >
        fix_value = #{fixValue,jdbcType=DECIMAL},
      </if>
      <if test="fixNum != null" >
        fix_num = #{fixNum,jdbcType=INTEGER},
      </if>
      <if test="paymentType != null" >
        payment_type = #{paymentType,jdbcType=TINYINT},
      </if>
      <if test="isVoucher != null" >
        is_voucher = #{isVoucher,jdbcType=TINYINT},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="localId != null" >
        local_id = #{localId,jdbcType=BIGINT},
      </if>
      <if test="isStore != null" >
        is_store = #{isStore,jdbcType=BIT},
      </if>
      <if test="isOpenCashbox != null" >
        is_open_cashbox = #{isOpenCashbox,jdbcType=BIT},
      </if>
        <if test="orderNumber != null">
            order_number = #{orderNumber,jdbcType=TINYINT},
        </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="getPaymentBranchByPaymentId" resultType="erp.chain.domain.PaymentBranch">
    SELECT * from payment_branch where tenant_payment_id=#{paymentId} AND is_deleted=0
    AND branch_id=${branchId}
  </select>
  <select id="getPaymentWithBusiness" resultType="mapUnderscoreToCamelCase">
    SELECT id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,tenant_id,branch_id,
    if(is_score=0,false,true) is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,if(is_open_cashbox=0,false,true) is_open_cashbox FROM payment WHERE id=#{id} AND is_deleted=0
  </select>
  <select id="getPaymentBranchWithBusiness" resultType="mapUnderscoreToCamelCase">
    SELECT tenant_payment_id id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,tenant_id,branch_id,
    if(is_score=0,false,true) is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,if(is_open_cashbox=0,false,true) is_open_cashbox FROM payment_branch WHERE tenant_payment_id=#{id} AND is_deleted=0
  </select>
  <select id="getPaymentByIdAndBranchId" resultType="mapUnderscoreToCamelCase">
    SELECT * FROM ((SELECT  0 is_own,tenant_payment_id id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,
    tenant_id,branch_id,is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,if(is_open_cashbox=0,false,true) is_open_cashbox
    FROM payment_branch WHERE is_deleted=0 AND tenant_id = ${tenantId} AND branch_id=${branchId})
    UNION ALL
    (SELECT  1 is_own,id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,tenant_id,branch_id,
    is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,if(is_open_cashbox=0,false,true) is_open_cashbox
    FROM payment WHERE is_deleted=0 AND tenant_id = ${tenantId} AND branch_id=${branchId})
    ) t WHERE t.id=#{id}
  </select>

  <!--查询用于储值的支付方式-->
  <select id="queryPaymentForStore" resultType="mapUnderscoreToCamelCase">
    SELECT * FROM ((SELECT tenant_payment_id id,payment_code,payment_name
    FROM payment_branch WHERE is_deleted=0 AND tenant_id = ${tenantId} AND branch_id=${branchId} AND is_store = 1 AND payment_status = 0
    )
    UNION ALL
    (SELECT id,payment_code,payment_name
    FROM payment WHERE is_deleted=0 AND tenant_id = ${tenantId} AND branch_id=${branchId} AND is_store = 1 AND payment_status = 0
    ))t ORDER BY t.id ASC
  </select>

  <select id="findByTenantIdAndPaymentCode" resultType="erp.chain.domain.Payment">
    SELECT * FROM payment WHERE tenant_id = #{tenantId} AND payment_code = #{paymentCode} AND is_deleted = 0
  </select>
  <select id="queryPaymentListByPayment"  resultType="mapUnderscoreToCamelCase">
    SELECT * FROM ((SELECT tenant_payment_id id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,
    tenant_id,branch_id,is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,
    if(is_open_cashbox=0,false,true) is_open_cashbox,order_number
    FROM payment_branch WHERE  tenant_id = ${tenantId} AND branch_id=${branchId}
    <if test="nameOrCode != null and nameOrCode !=''" >
      AND (payment_code LIKE '%${nameOrCode}%' OR payment_name LIKE '%${nameOrCode}%')
    </if>
    <if test="paymentStatus != null and paymentStatus != ''">
      AND payment_status = ${paymentStatus}
    </if>
    <if test="noCash != null and noCash == 'true'">
      AND id NOT IN (SELECT id FROM payment_branch WHERE tenant_id = ${tenantId} AND branch_id=${branchId} AND payment_code = 'CSH')
    </if>
    )
    UNION ALL
    (SELECT id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,tenant_id,branch_id,
    is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,
    if(is_open_cashbox=0,false,true) is_open_cashbox,order_number
    FROM payment WHERE  tenant_id = ${tenantId} AND branch_id=${branchId} AND payment_code != 'MT' AND payment_code != 'ELM'
    <if test="nameOrCode != null and nameOrCode !=''" >
      AND (payment_code LIKE '%${nameOrCode}%' OR payment_name LIKE '%${nameOrCode}%')
    </if>
    <if test="paymentStatus != null and paymentStatus != ''">
      AND payment_status = ${paymentStatus}
    </if>
    <if test="noCash != null and noCash == 'true'">
      AND id NOT IN (SELECT id FROM payment WHERE tenant_id = ${tenantId} AND branch_id=${branchId} AND payment_code = 'CSH')
    </if>
    ))t ORDER BY if(isnull(t.order_number),1,0),t.order_number ASC
    <if test="rows != null and offset !=null" >
      LIMIT ${offset},${rows}
    </if>
  </select>
  <select id="queryPaymentListByPaymentSum" resultType="Long">
    select count(*) from ((SELECT tenant_payment_id id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,
    tenant_id,branch_id,is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,if(is_open_cashbox=0,false,true) is_open_cashbox
    FROM payment_branch WHERE  tenant_id = ${tenantId} AND branch_id=${branchId}
    <if test="nameOrCode != null and nameOrCode !=''" >
      AND (payment_code LIKE '%${nameOrCode}%' OR payment_name LIKE '%${nameOrCode}%')
    </if>
    <if test="paymentStatus != null and paymentStatus != ''">
      AND payment_status = ${paymentStatus}
    </if>
    <if test="noCash != null and noCash == 'true'">
      AND id NOT IN (SELECT id FROM payment_branch WHERE tenant_id = ${tenantId} AND branch_id=${branchId} AND payment_code = 'CSH')
    </if>
    )
    UNION ALL
    (SELECT id,payment_code,payment_name,payment_status,currency_id,create_by,create_at,last_update_by,last_update_at,is_deleted,tenant_id,branch_id,
    is_score,fix_value,fix_num,payment_type,is_voucher,version,local_id,is_change,is_memo,is_sale,if(is_store=0,false,true) is_store,if(is_open_cashbox=0,false,true) is_open_cashbox
    FROM payment WHERE  tenant_id = ${tenantId} AND branch_id=${branchId} AND payment_code != 'MT' AND payment_code != 'ELM'
    <if test="nameOrCode != null and nameOrCode !=''" >
      AND (payment_code LIKE '%${nameOrCode}%' OR payment_name LIKE '%${nameOrCode}%')
    </if>
    <if test="paymentStatus != null and paymentStatus != ''">
      AND payment_status = ${paymentStatus}
    </if>
    <if test="noCash != null and noCash == 'true'">
      AND id NOT IN (SELECT id FROM payment WHERE tenant_id = ${tenantId} AND branch_id=${branchId} AND payment_code = 'CSH')
    </if>
    )) pay_
  </select>
</mapper>