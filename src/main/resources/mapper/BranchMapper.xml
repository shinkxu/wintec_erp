<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="erp.chain.mapper.BranchMapper">

    <select id="find" parameterType="map" resultType="erp.chain.domain.Branch">
        select * from branch
        <where>
            is_deleted = 0
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="branchType != null">
                AND branch_type = #{branchType}
            </if>
            <if test="tenantId != null">
                AND tenant_id = ${tenantId}
            </if>
            <if test="code != null">
                AND code = #{code}
            </if>
        </where>
    </select>
    <select id="findList" parameterType="map" resultType="mapUnderscoreToCamelCase">
        SELECT b.*,a.name area_name,pb.name parent_branch_name FROM branch b
        INNER JOIN area a ON a.tenant_id = b.tenant_id AND b.area_id = a.id
        LEFT JOIN branch pb ON pb.tenant_id = b.tenant_id AND pb.id = b.parent_id
        <where>
            b.is_deleted = 0
            <if test="id != null">
                and b.id = #{id}
            </if>
            <if test="branchType != null">
                AND b.branch_type = #{branchType}
            </if>
            <if test="includeOwn != null and includeOwn == 'true'">
                <if test="parentId != null">
                    AND (b.parent_id = #{parentId} OR b.id = #{parentId})
                </if>
            </if>
            <if test="includeOwn == null or includeOwn == 'false'">
                <if test="parentId != null">
                    AND b.parent_id = #{parentId}
                </if>
            </if>
            <if test="tenantId != null">
                AND b.tenant_id = ${tenantId}
            </if>
            <if test="code != null">
                AND b.code = #{code}
            </if>
            <if test="queryStr != null">
                AND (b.code LIKE '%${queryStr}%' OR b.name LIKE '%${queryStr}%')
            </if>
        </where>
        <if test="order==null and field==null">
            ORDER BY b.id ASC
        </if>
        <if test="order!=null and field!=null">
            ORDER BY b.${field} ${order}
        </if>
        <if test="offset != null and rows != null">
            LIMIT ${offset},${rows}
        </if>
    </select>
    <select id="countList" parameterType="map" resultType="long">
        select count(1) from branch
        <where>
            is_deleted = 0
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="branchType != null">
                AND branch_type = #{branchType}
            </if>
            <if test="includeOwn != null and includeOwn == 'true'">
                <if test="parentId != null">
                    AND (parent_id = #{parentId} OR id = #{parentId})
                </if>
                <if test="parentId == null">
                    AND id = #{parentId}
                </if>
            </if>
            <if test="includeOwn == null or includeOwn == 'false'">
                <if test="parentId != null">
                    AND parent_id = #{parentId}
                </if>
            </if>
            <if test="tenantId != null">
                AND tenant_id = ${tenantId}
            </if>
            <if test="code != null">
                AND code = #{code}
            </if>
            <if test="queryStr != null">
                AND (code LIKE '%${queryStr}%' OR name LIKE '%${queryStr}%')
            </if>
        </where>
    </select>
    <select id="findByTenantIdAndBranchId" parameterType="map" resultType="erp.chain.domain.Branch">
        select * from branch WHERE tenant_id=${tenantId} AND id=#{branchId} AND is_deleted=0
    </select>
    <select id="findBranchByTenantIdAndBranchId" resultType="erp.chain.domain.Branch">
        SELECT * FROM branch WHERE tenant_id = ${tenantId} AND id = #{branchId} AND is_deleted = 0
    </select>
    <insert id="insert" parameterType="map" useGeneratedKeys="true" keyProperty="id">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri Nov 04 15:05:01 CST 2016.
        -->
        insert into branch (id, tenant_id, branch_type,
        code, name, phone,
        contacts, address, geolocation,
        area_id, parent_id, status,
        memo, create_at, create_by,
        last_update_at, last_update_by, is_deleted,
        type, is_tinyhall, is_takeout,
        takeout_status, amount, takeout_range,
        takeout_amount, takeout_time, start_takeout_time,
        end_takeout_time, shipping_price_type, is_buffet,
        is_invite, distribution_center_id, external_system,
        is_docking_external_system, is_automatic_examination, is_allow_pay_later,
        allow_pay_way, version, local_id,
        business, is_manage_goods,group_code,is_control_range,is_hidden_store,effective_days,
        effective_date,pos_slaves,eleme_account_type,is_use_hq_goods,
        mpos_version,
        fpos_version,
        aerp_version,
        mei_tuan_poi_id,
        mei_tuan_poi_name,
        sms_count,
        sms_use_way,
        sms_status,
        environment_type,
        commercial_type
        )
        values (#{id,jdbcType=BIGINT}, #{tenantId,jdbcType=BIGINT}, #{branchType,jdbcType=TINYINT},
        #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
        #{contacts,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{geolocation,jdbcType=VARCHAR},
        #{areaId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{status,jdbcType=TINYINT},
        #{memo,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR},
        #{lastUpdateAt,jdbcType=TIMESTAMP}, #{lastUpdateBy,jdbcType=VARCHAR}, #{isDeleted,jdbcType=BIT},
        #{type,jdbcType=TINYINT}, #{isTinyhall,jdbcType=BIT}, #{isTakeout,jdbcType=BIT},
        #{takeoutStatus,jdbcType=TINYINT}, #{amount,jdbcType=DECIMAL}, #{takeoutRange,jdbcType=INTEGER},
        #{takeoutAmount,jdbcType=DECIMAL}, #{takeoutTime,jdbcType=VARCHAR}, #{startTakeoutTime,jdbcType=VARCHAR},
        #{endTakeoutTime,jdbcType=VARCHAR}, #{shippingPriceType,jdbcType=TINYINT}, #{isBuffet,jdbcType=BIT},
        #{isInvite,jdbcType=BIT}, #{distributionCenterId,jdbcType=BIGINT}, #{externalSystem,jdbcType=TINYINT},
        #{isDockingExternalSystem,jdbcType=BIT}, #{isAutomaticExamination,jdbcType=BIT}, #{isAllowPayLater,jdbcType=BIT},
        #{allowPayWay,jdbcType=VARCHAR}, #{version,jdbcType=BIGINT}, #{localId,jdbcType=BIGINT},
        #{business,jdbcType=CHAR}, #{isManageGoods,jdbcType=BIT},#{groupCode,jdbcType=VARCHAR},#{isControlRange,jdbcType=INTEGER},
        #{isHiddenStore,jdbcType=BIT},#{effectiveDays,jdbcType=INTEGER},#{effectiveDate,jdbcType=TIMESTAMP},#{posSlaves,jdbcType=INTEGER},
        #{elemeAccountType,jdbcType=TINYINT},#{isUseHqGoods,jdbcType=TINYINT},
        #{mposVersion,jdbcType=VARCHAR},
        #{fposVersion,jdbcType=VARCHAR},
        #{aerpVersion,jdbcType=VARCHAR},
        #{meiTuanPoiId,jdbcType=VARCHAR},
        #{meiTuanPoiName,jdbcType=VARCHAR},
        #{smsCount,jdbcType=INTEGER},
        #{smsUseWay,jdbcType=VARCHAR},
        #{smsStatus,jdbcType=TINYINT},
        #{environmentType,jdbcType=TINYINT},
        #{commercialType,jdbcType=TINYINT})
    </insert>
    <update id="updateBranch" parameterType="map">
        update branch
        <set>
        <if test="storeInformationName!=null">name =#{storeInformationName,jdbcType=VARCHAR},</if>
            <choose>
                <when test="storeInformationContacts!=null">
                    contacts =#{storeInformationContacts,jdbcType=VARCHAR},
                </when>
                <when test="storeInformationContacts==null">
                    contacts =#{null,jdbcType=VARCHAR},
                </when>
            </choose>
            <choose>
                <when test="storeInformationPhone!=null">
                    phone =#{storeInformationPhone,jdbcType=VARCHAR},
                </when>
                <when test="storeInformationPhone==null">
                    phone =#{null,jdbcType=VARCHAR},
                </when>
            </choose>
            <if test="storeInformationAddress != null" >
                address = #{storeInformationAddress,jdbcType=VARCHAR},
            </if>
            <if test="storeInformationAddress == null" >
                address = #{null,jdbcType=VARCHAR},
            </if>
        </set>
        WHERE  id=#{branchId} AND tenant_id=#{tenantId}
    </update>
    <update id="update" parameterType="map">
        update branch
        <trim prefix="SET" suffixOverrides=",">
            <if test="tenantId != null" >
                tenant_id = #{tenantId,jdbcType=BIGINT},
            </if>
            <if test="branchType != null" >
                branch_type = #{branchType,jdbcType=TINYINT},
            </if>
            <if test="code != null" >
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            phone = #{phone,jdbcType=VARCHAR},
            <if test="contacts != null" >
                contacts = #{contacts,jdbcType=VARCHAR},
            </if>
            <if test="address != null" >
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="groupCode != null">
                group_code = #{groupCode, jdbcType=VARCHAR},
            </if>
            <if test="geolocation != null" >
                geolocation = #{geolocation,jdbcType=VARCHAR},
            </if>
            <if test="areaId != null" >
                area_id = #{areaId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null" >
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="memo != null" >
                memo = #{memo,jdbcType=VARCHAR},
            </if>
            <if test="createAt != null" >
                create_at = #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null" >
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateAt != null" >
                last_update_at = #{lastUpdateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateBy != null" >
                last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null" >
                is_deleted = #{isDeleted,jdbcType=BIT},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="isTinyhall != null" >
                is_tinyhall = #{isTinyhall,jdbcType=BIT},
            </if>
            <if test="isTakeout != null" >
                is_takeout = #{isTakeout,jdbcType=BIT},
            </if>
            <if test="takeoutStatus != null" >
                takeout_status = #{takeoutStatus,jdbcType=TINYINT},
            </if>
            <if test="amount != null" >
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="takeoutRange != null" >
                takeout_range = #{takeoutRange,jdbcType=INTEGER},
            </if>
            <if test="takeoutAmount != null" >
                takeout_amount = #{takeoutAmount,jdbcType=DECIMAL},
            </if>
            <if test="takeoutTime != null" >
                takeout_time = #{takeoutTime,jdbcType=VARCHAR},
            </if>
            <if test="startTakeoutTime != null" >
                start_takeout_time = #{startTakeoutTime,jdbcType=VARCHAR},
            </if>
            <if test="meituanToken != null" >
                meituan_token = #{meituanToken,jdbcType=VARCHAR},
            </if>
            <if test="meituanBusiness != null" >
                meituan_business = #{meituanBusiness,jdbcType=VARCHAR},
            </if>
            <if test="endTakeoutTime != null" >
                end_takeout_time = #{endTakeoutTime,jdbcType=VARCHAR},
            </if>
            <if test="shippingPriceType != null" >
                shipping_price_type = #{shippingPriceType,jdbcType=TINYINT},
            </if>
            <if test="isBuffet != null" >
                is_buffet = #{isBuffet,jdbcType=BIT},
            </if>
            <if test="isInvite != null" >
                is_invite = #{isInvite,jdbcType=BIT},
            </if>
            <if test="distributionCenterId != null" >
                distribution_center_id = #{distributionCenterId,jdbcType=BIGINT},
            </if>
            <if test="externalSystem != null" >
                external_system = #{externalSystem,jdbcType=TINYINT},
            </if>
            <if test="isDockingExternalSystem != null" >
                is_docking_external_system = #{isDockingExternalSystem,jdbcType=BIT},
            </if>
            <if test="isAutomaticExamination != null" >
                is_automatic_examination = #{isAutomaticExamination,jdbcType=BIT},
            </if>
            <if test="isAllowPayLater != null" >
                is_allow_pay_later = #{isAllowPayLater,jdbcType=BIT},
            </if>
            <if test="allowPayWay != null">
                allow_pay_way = #{allowPayWay, jdbcType=VARCHAR},
            </if>
            <if test="version != null" >
                version = #{version,jdbcType=BIGINT},
            </if>
            <if test="localId != null" >
                local_id = #{localId,jdbcType=BIGINT},
            </if>
            <if test="business != null" >
                business = #{business,jdbcType=CHAR},
            </if>
            <if test="shopId != null">
                shop_id = #{shopId, jdbcType=BIGINT},
            </if>
            <if test="isManageGoods != null">
                is_manage_goods = #{isManageGoods,jdbcType=BIT},
            </if>
            <if test="isControlRange != null">
                is_control_range = #{isControlRange,jdbcType=INTEGER},
            </if>
            <if test="isEffective != null">
                is_effective = #{isEffective,jdbcType=INTEGER},
            </if>
            <if test="elemeAccountType != null">
                eleme_account_type = #{elemeAccountType,jdbcType=TINYINT},
            </if>
            <if test="isHiddenStore != null">
                is_hidden_store = #{isHiddenStore,jdbcType=BIT},
            </if>
            <if test="effectiveDays != null">
                effective_days = #{effectiveDays,jdbcType=INTEGER},
            </if>
            <if test="effectiveDate != null">
                effective_date = #{effectiveDate,jdbcType=TIMESTAMP},
            </if>
            <if test="posSlaves != null">
                pos_slaves = #{posSlaves,jdbcType=TIMESTAMP},
            </if>
            <if test="isUseHqGoods != null">
                is_use_hq_goods = #{isUseHqGoods,jdbcType=BIT},
            </if>
            <if test="meiTuanPoiId != null">
                mei_tuan_poi_id = #{meiTuanPoiId, jdbcType=VARCHAR},
            </if>
            <if test="meiTuanPoiName != null">
                mei_tuan_poi_name = #{meiTuanPoiName, jdbcType=VARCHAR},
            </if>
            <if test="mposVersion != null">
                mpos_version = #{mposVersion,jdbcType=VARCHAR},
            </if>
            <if test="fposVersion != null">
                fpos_version = #{fposVersion,jdbcType=VARCHAR},
            </if>
            <if test="aerpVersion != null">
                aerp_version = #{aerpVersion,jdbcType=VARCHAR},
            </if>
            <if test="smsCount != null">
                sms_count = #{smsCount,jdbcType=INTEGER},
            </if>
            <if test="smsUseWay != null">
                sms_use_way = #{smsUseWay, jdbcType=VARCHAR},
            </if>
            <if test="smsStatus != null">
                sms_status = #{smsStatus, jdbcType=TINYINT},
            </if>
            <if test="environmentType != null">
                environment_type = #{environmentType, jdbcType=TINYINT},
            </if>
            <if test="commercialType != null">
                commercial_type = #{commercialType, jdbcType=TINYINT},
            </if>
        </trim>
        <where>
            id = #{id,jdbcType=BIGINT}
        </where>
    </update>

    <update id="updateByMap" parameterType="map">
        update branch
        <set>
            <if test="tenantId != null" >
                tenant_id = #{tenantId,jdbcType=BIGINT},
            </if>
            <if test="branchType != null" >
                branch_type = #{branchType,jdbcType=TINYINT},
            </if>
            <if test="code != null" >
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="phone != null" >
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="contacts != null" >
                contacts = #{contacts,jdbcType=VARCHAR},
            </if>
            <if test="address != null" >
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="geolocation != null" >
                geolocation = #{geolocation,jdbcType=VARCHAR},
            </if>
            <if test="areaId != null" >
                area_id = #{areaId,jdbcType=BIGINT},
            </if>
            <if test="parentId != null" >
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="status != null" >
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="memo != null" >
                memo = #{memo,jdbcType=VARCHAR},
            </if>
            <if test="createAt != null" >
                create_at = #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null" >
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateAt != null" >
                last_update_at = #{lastUpdateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdateBy != null" >
                last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null" >
                is_deleted = #{isDeleted,jdbcType=BIT},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="isTinyhall != null" >
                is_tinyhall = #{isTinyhall,jdbcType=BIT},
            </if>
            <if test="isTakeout != null" >
                is_takeout = #{isTakeout,jdbcType=BIT},
            </if>
            <if test="takeoutStatus != null" >
                takeout_status = #{takeoutStatus,jdbcType=TINYINT},
            </if>
            <if test="amount != null" >
                amount = #{amount,jdbcType=DECIMAL},
            </if>
            <if test="takeoutRange != null" >
                takeout_range = #{takeoutRange,jdbcType=INTEGER},
            </if>
            <if test="takeoutAmount != null" >
                takeout_amount = #{takeoutAmount,jdbcType=DECIMAL},
            </if>
            <if test="takeoutTime != null" >
                takeout_time = #{takeoutTime,jdbcType=VARCHAR},
            </if>
            <if test="startTakeoutTime != null" >
                start_takeout_time = #{startTakeoutTime,jdbcType=VARCHAR},
            </if>
            <if test="endTakeoutTime != null" >
                end_takeout_time = #{endTakeoutTime,jdbcType=VARCHAR},
            </if>
            <if test="shippingPriceType != null" >
                shipping_price_type = #{shippingPriceType,jdbcType=TINYINT},
            </if>
            <if test="isBuffet != null" >
                is_buffet = #{isBuffet,jdbcType=BIT},
            </if>
            <if test="isInvite != null" >
                is_invite = #{isInvite,jdbcType=BIT},
            </if>
            <if test="distributionCenterId != null" >
                distribution_center_id = #{distributionCenterId,jdbcType=BIGINT},
            </if>
            <if test="externalSystem != null" >
                external_system = #{externalSystem,jdbcType=TINYINT},
            </if>
            <if test="isDockingExternalSystem != null" >
                is_docking_external_system = #{isDockingExternalSystem,jdbcType=BIT},
            </if>
            <if test="isAutomaticExamination != null" >
                is_automatic_examination = #{isAutomaticExamination,jdbcType=BIT},
            </if>
            <if test="isAllowPayLater != null" >
                is_allow_pay_later = #{isAllowPayLater,jdbcType=BIT},
            </if>
            <if test="allowPayWay != null">
                allow_pay_way = #{allowPayWay, jdbcType=VARCHAR},
            </if>
            <if test="version != null" >
                version = #{version,jdbcType=BIGINT},
            </if>
            <if test="localId != null" >
                local_id = #{localId,jdbcType=BIGINT},
            </if>
            <if test="business != null" >
                business = #{business,jdbcType=CHAR},
            </if>
            <if test="shopId != null">
                shop_id = #{shopId, jdbcType=BIGINT},
            </if>
            <if test="isManageGoods != null">
                is_manage_goods = #{isManageGoods,jdbcType=BIT},
            </if>
            <if test="isControlRange != null">
                is_control_range = #{isControlRange,jdbcType=INTEGER},
            </if>
            <if test="effectiveDays != null">
                effective_days = #{effectiveDays,jdbcType=INTEGER},
            </if>
            <if test="effectiveDate != null">
                effective_date = #{effectiveDate,jdbcType=TIMESTAMP},
            </if>
            <if test="posSlaves != null">
                pos_slaves = #{posSlaves,jdbcType=TIMESTAMP}
            </if>
        </set>
        <where>
            id = #{id,jdbcType=BIGINT}
        </where>
    </update>
    <select id="queryBranchList" resultType="mapUnderscoreToCamelCase">
        SELECT * FROM v_branch_info AS branch_info WHERE branch_info.tenant_id = ${tenantId}
        <if test="codeName != null and codeName != ''">
            AND (branch_info.branch_code LIKE '%${codeName}%' OR branch_info.branch_name LIKE '%${codeName}%')
        </if>
        <if test="contacts != null and contacts != ''">
            AND branch_info.contacts Like '%${contacts}%'
        </if>
        <if test="childAreaIds != null and childAreaIds != ''">
            AND branch_info.area_id in (${childAreaIds})
        </if>
        <if test="singleBranchId != null and singleBranchId != ''">
            AND branch_info.branch_id = #{singleBranchId}
        </if>
        <if test="branchType != null and branchType != ''">
            AND branch_info.branch_type = #{branchType}
        </if>
        <if test="psBranchType != null and psBranchType != ''">
            AND branch_info.branch_type in (${psBranchType})
        </if>
        <if test="bId != null and bId != ''">
            AND branch_info.branch_id!=${bId}
        </if>
        <if test="isManageGoods != null and isManageGoods != ''">
            AND branch_info.is_manage_goods = 0
        </if>
        <if test="userAreas != null and userAreas != ''">
            <if test="authorityType != 1">
                AND branch_info.area_id IN (${userAreas})
                <if test="childAreaIds == null or childAreaIds == ''">
                    /*员工拥有本店权限*/
                    UNION SELECT * FROM v_branch_info AS branch_info WHERE branch_info.tenant_id = ${tenantId} AND branch_info.branch_id = ${eBranchId}
                    <if test="codeName != null and codeName != ''">
                        AND (branch_info.branch_code LIKE '%${codeName}%' OR branch_info.branch_name LIKE '%${codeName}%')
                    </if>
                    ORDER BY branch_id
                </if>
            </if>
        </if>
        <if test="userAreas == null or userAreas == ''">
            <if test="authorityType != 1 and (codeName == '' or codeName == null)">
                UNION SELECT * FROM v_branch_info AS branch_info WHERE branch_info.tenant_id = ${tenantId} AND branch_info.branch_id = ${singleBranchId} ORDER BY branch_id
            </if>
        </if>
        <if test="offset != null and rows != null">
            LIMIT ${offset},${rows}
        </if>
    </select>
    <select id="queryBranchCount" resultType="Long">
        SELECT COUNT(1) FROM v_branch_info branch_info WHERE branch_info.tenant_id = ${tenantId}
        <if test="codeName != null and codeName != ''">
            AND (branch_info.branch_code LIKE '%${codeName}%' OR branch_info.branch_name LIKE '%${codeName}%')
        </if>
        <if test="contacts != null and contacts != ''">
            AND branch_info.contacts Like '%${contacts}%'
        </if>
        <if test="childAreaIds != null and childAreaIds != ''">
            AND branch_info.area_id in (${childAreaIds})
        </if>
        <if test="singleBranchId != null and singleBranchId != ''">
            AND branch_info.branch_id = #{singleBranchId}
        </if>
        <if test="branchType != null and branchType != ''">
            AND branch_info.branch_type = #{branchType}
        </if>
        <if test="psBranchType != null and psBranchType != ''">
            AND branch_info.branch_type in (${psBranchType})
        </if>
        <if test="bId != null and bId != ''">
            AND branch_info.branch_id!=${bId}
        </if>
        <if test="isManageGoods != null and isManageGoods != ''">
            AND branch_info.is_manage_goods = 0
        </if>
        <if test="authorityType != 1">
            AND (branch_info.area_id IN (${userAreas}) OR branch_info.branch_id = #{branchId})
        </if>
    </select>
    <select id="getAreaChildLst" resultType="String">
        SELECT getAreaChildLst(#{areaId})
    </select>
    <select id="findMaxBranchCode" resultType="string">
        SELECT MAX(code) FROM branch WHERE tenant_id = ${tenantId} AND is_deleted = 0
    </select>

    <select id="findAllByBranchTypeInListAndTenantIdAndDistributionCenterId" resultType="erp.chain.domain.Branch">
        SELECT
        *
        FROM branch
        WHERE branch_type IN
        <foreach collection="branchTypes" item="branchType" index="index" open="(" separator="," close=")">
            #{branchType}
        </foreach>
        AND tenant_id = ${tenantId}
        AND distribution_center_id = #{distributionCenterId}
        AND is_deleted = 0
    </select>
    <select id="findBranchByTenantId" resultType="erp.chain.domain.Branch">
        SELECT * FROM branch b
        WHERE 1=1 AND b.is_deleted = 0
        <if test="tenantId != null and tenantId != ''">
            AND b.tenant_id = ${tenantId}
        </if>
        <if test="parentId != null and parentId != ''">
            AND b.parent_id = ${parentId}
        </if>
        <if test="id != null and id != ''">
            AND b.id = #{id}
        </if>
        <if test="groupCode != null and groupCode != ''">
            AND b.group_code = #{groupCode}
        </if>
        <if test="name != null and name != ''">
            AND b.name = #{name}
        </if>
        <if test="areaIds != null and areaIds != ''">
            AND b.area_id in (${areaIds})
        </if>
    </select>
    <select id="initBranchPayment" resultType="BigInteger">
        CALL init_branch_payment(${tenantId},${branchId});
    </select>
    <select id="getMainBranch" resultType="erp.chain.domain.Branch">
        SELECT * FROM branch where tenant_id=${tenantId} AND is_deleted=0 AND branch_type=0
    </select>
    <select id="getChildBranches" resultType="erp.chain.domain.Branch">
        SELECT * FROM branch where tenant_id=${tenantId} AND is_deleted=0 AND branch_type!=0
    </select>
    <select id="findByTenantIdAndIdAndShopId" resultType="erp.chain.domain.Branch">
        SELECT * from branch WHERE tenant_id = ${tenantId}
        AND id = #{branchId}
        AND shop_id = #{shopId}
        AND is_deleted = 0
        LIMIT 0, 1
    </select>

    <update id="clearElemeBindingRestaurant">
        UPDATE branch
        SET shop_id = NULL
        WHERE shop_id = #{shopId}
        AND id != #{branchId}
        AND is_deleted = 0
    </update>

    <select id="findByShopId" resultType="erp.chain.domain.Branch">
        SELECT *
        FROM branch
        WHERE shop_id = #{shopId}
        AND is_deleted = 0
        LIMIT 0, 1
    </select>

    <select id="listBranches" resultType="erp.chain.domain.MapUnderscoreToCamelCase">
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(queryStr)">
            <bind name="queryStr" value="'%' + queryStr + '%'"></bind>
        </if>
        SELECT id, code, name, create_at, tenant_id,IFNULL(is_effective,0)is_effective,effective_date
        FROM branch
        WHERE is_deleted = 0
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(queryStr)">
            AND name LIKE #{queryStr}
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(isEffective)">
            AND IFNULL(is_effective,0) = #{isEffective}
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(startDate)">
            AND create_at &gt;= #{startDate}
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(endDate)">
            AND create_at &lt;= #{endDate}
        </if>
        <if test="@org.apache.commons.collections.CollectionUtils@isNotEmpty(branchIds)">
            AND id ${sqlOperationSymbol}
            <foreach collection="branchIds" index="index" item="branchId" open="(" close=")" separator=",">
                #{branchId}
            </foreach>
        </if>
        <if test="@org.apache.commons.collections.CollectionUtils@isNotEmpty(tenantIds)">
            AND tenant_id IN
            <foreach collection="tenantIds" index="index" item="tenantId" open="(" close=")" separator=",">
                ${tenantId}
            </foreach>
        </if>
        <if test="offset != null and maxResult != null">
            LIMIT #{offset}, #{maxResult}
        </if>
    </select>

    <select id="count" resultType="java.lang.Integer">
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(queryStr)">
            <bind name="queryStr" value="'%' + queryStr + '%'"></bind>
        </if>
        SELECT COUNT(1)
        FROM branch
        WHERE is_deleted = 0
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(queryStr)">
            AND name LIKE #{queryStr}
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(isEffective)">
            AND IFNULL(is_effective,0) = #{isEffective}
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(startDate)">
            AND create_at &gt;= #{startDate}
        </if>
        <if test="@org.apache.commons.lang.StringUtils@isNotBlank(endDate)">
            AND create_at &lt;= #{endDate}
        </if>
        <if test="@org.apache.commons.collections.CollectionUtils@isNotEmpty(branchIds)">
            AND id ${sqlOperationSymbol}
            <foreach collection="branchIds" index="index" item="branchId" open="(" close=")" separator=",">
                #{branchId}
            </foreach>
        </if>
        <if test="@org.apache.commons.collections.CollectionUtils@isNotEmpty(tenantIds)">
            AND tenant_id IN
            <foreach collection="tenantIds" index="index" item="tenantId" open="(" close=")" separator=",">
                ${tenantId}
            </foreach>
        </if>
    </select>

    <select id="findBranchInfoById" resultType="erp.chain.domain.MapUnderscoreToCamelCase">
        SELECT id, code, name, create_at FROM branch WHERE id = #{branchId} AND is_deleted = 0
    </select>

    <select id="statisticsBranchCount" resultType="erp.chain.domain.MapUnderscoreToCamelCase">
        SELECT
        tenant_id,
        COUNT(1) branch_count
        FROM branch
        WHERE is_deleted = 0
        AND tenant_id IN
        <foreach collection="tenantIds" index="index" item="tenantId" open="(" separator="," close=")">
            ${tenantId}
        </foreach>
        GROUP BY tenant_id
    </select>

    <select id="findHeadquartersBranch" resultType="erp.chain.domain.Branch">
        SELECT * FROM branch WHERE tenant_id = ${tenantId} AND is_deleted = 0 AND branch_type = 0
    </select>

    <select id="statisticsAgentBranchCount" resultType="erp.chain.domain.MapUnderscoreToCamelCase">
        SELECT COUNT(1) AS branch_count FROM branch WHERE tenant_id IN <include refid="tenantIdInSql"></include> AND is_deleted = 0
        UNION ALL
        SELECT COUNT(1) AS branch_count FROM branch WHERE tenant_id IN <include refid="tenantIdInSql"></include> AND is_deleted = 0 AND create_at &gt;= #{yesterdayStartTime} AND create_at &lt;= #{yesterdayEndTime}
        UNION ALL
        SELECT COUNT(1) AS branch_count FROM branch WHERE tenant_id IN <include refid="tenantIdInSql"></include> AND is_deleted = 0 AND create_at &gt;= #{thisMonthStartTime} AND create_at &lt;= #{thisMonthEndTime}
    </select>

    <sql id="tenantIdInSql">
        <foreach collection="tenantIds" index="index" item="tenantId" open="(" separator="," close=")">
            ${tenantId}
        </foreach>
    </sql>
    <select id="getAllBranches" resultType="erp.chain.domain.Branch">
        SELECT * FROM branch WHERE is_deleted=0 AND (is_effective IS NULL OR is_effective=0);
    </select>

    <select id="findAllByTenantId" resultType="erp.chain.domain.MapUnderscoreToCamelCase">
        SELECT id, tenant_id, name FROM branch WHERE is_deleted = 0 AND tenant_id = ${tenantId}
    </select>
    
    <select id="isDistributionCenterSum" resultType="java.lang.Long">
        SELECT count(1) FROM branch b WHERE b.distribution_center_id = ${branchId}
    </select>

    <select id="statisticsBranches" resultType="mapUnderscoreToCamelCase">
        SELECT
        *
        FROM branch
        WHERE tenant_id IN
        <foreach collection="tenantIds" index="index" item="tenantId" open="(" separator="," close=")">
            ${tenantId}
        </foreach>
        AND id IN
        <foreach collection="branchIds" index="index" item="branchId" open="(" separator="," close=")">
            #{branchId}
        </foreach>
        AND is_deleted = 0
    </select>

    <select id="findAll" parameterType="erp.chain.utils.SearchModel" resultType="erp.chain.domain.Branch">
        SELECT * FROM branch <include refid="erp.chain.mapper.UniversalMapper.searchConditionSql"></include>
    </select>

    <select id="checkIsHasMall" resultType="java.lang.Integer">
        SELECT count(1) FROM branch WHERE tenant_id = #{tenantId} AND branch_type = 4 AND is_deleted = 0
    </select>

    <select id="getChildBranchIds" resultType="String">
        select GROUP_CONCAT(branch.id) branch_ids from branch where tenant_id=#{tenantId} and area_id in (${areaIds}) and is_deleted=0;
    </select>

    <update id="removeBranch">
        UPDATE branch SET is_deleted=1,last_update_at=NOW(),last_update_by=#{userName}
        WHERE is_deleted=0 AND tenant_id=#{tenantId} AND (id=#{branchId} OR parent_id=#{branchId})
    </update>

    <select id="findChildBranchList" resultType="erp.chain.domain.Branch">
        SELECT * FROM branch
        WHERE tenant_id = ${tenantId}
        AND parent_id = #{parentId}
        AND is_deleted = 0
    </select>
</mapper>