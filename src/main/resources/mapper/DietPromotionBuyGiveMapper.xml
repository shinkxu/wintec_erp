<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="erp.chain.mapper.DietPromotionBuyGiveMapper" >
  <resultMap id="BaseResultMap" type="erp.chain.domain.DietPromotionBuyGive" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 04 15:05:01 CST 2016.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="diet_promotion_id" property="dietPromotionId" jdbcType="BIGINT" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="package_id" property="packageId" jdbcType="BIGINT" />
    <result column="buy_num" property="buyNum" jdbcType="DECIMAL" />
    <result column="give_goods_id" property="giveGoodsId" jdbcType="BIGINT" />
    <result column="give_package_id" property="givePackageId" jdbcType="BIGINT" />
    <result column="give_num" property="giveNum" jdbcType="DECIMAL" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="last_update_by" property="lastUpdateBy" jdbcType="VARCHAR" />
    <result column="last_update_at" property="lastUpdateAt" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
    <result column="version" property="version" jdbcType="BIGINT" />
    <result column="local_id" property="localId" jdbcType="BIGINT" />
    <result column="tenant_id" property="tenantId" jdbcType="BIGINT" />
    <result column="branch_id" property="branchId" jdbcType="BIGINT" />
  </resultMap>

  <insert id="insert" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 04 15:05:01 CST 2016.
    -->
    insert into diet_promotion_buy_give (id, diet_promotion_id, goods_id,
      package_id, buy_num, give_goods_id,
      give_package_id,give_num,
      create_by, create_at, last_update_by, 
      last_update_at, is_deleted, version, 
      local_id, tenant_id, branch_id
      )
    values (#{id,jdbcType=INTEGER}, #{dietPromotionId,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, 
      #{packageId,jdbcType=BIGINT}, #{buyNum,jdbcType=DECIMAL}, #{giveGoodsId,jdbcType=BIGINT},
      #{givePackageId,jdbcType=BIGINT},#{giveNum,jdbcType=DECIMAL},
      #{createBy,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{lastUpdateBy,jdbcType=VARCHAR},
      #{lastUpdateAt,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}, #{version,jdbcType=BIGINT}, 
      #{localId,jdbcType=BIGINT}, #{tenantId,jdbcType=BIGINT}, #{branchId,jdbcType=BIGINT}
      )
  </insert>

  <update id="update" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Nov 04 15:05:01 CST 2016.
    -->
    update diet_promotion_buy_give
    <set >
      <if test="dietPromotionId != null" >
        diet_promotion_id = #{dietPromotionId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="packageId != null" >
        package_id = #{packageId,jdbcType=BIGINT},
      </if>
      <if test="buyNum != null" >
        satisfy = #{buyNum,jdbcType=DECIMAL},
      </if>
      <if test="giveGoodsId != null" >
        give_goods_id = #{giveGoodsId,jdbcType=BIGINT},
      </if>
      <if test="givePackageId != null" >
        give_package_id = #{givePackageId,jdbcType=BIGINT},
      </if>
      <if test="giveNum != null" >
        reduction = #{giveNum,jdbcType=DECIMAL},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createAt != null" >
        create_at = #{createAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateBy != null" >
        last_update_by = #{lastUpdateBy,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateAt != null" >
        last_update_at = #{lastUpdateAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=BIGINT},
      </if>
      <if test="localId != null" >
        local_id = #{localId,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=BIGINT},
      </if>
      <if test="branchId != null" >
        branch_id = #{branchId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findByCondition" parameterType="map" resultType="erp.chain.domain.DietPromotionBuyGive">
    SELECT * FROM diet_promotion_buy_give dpsr WHERE is_deleted=0
    <if test="id != null and id != ''">
      AND dpsr.id =#{id}
    </if>
    <if test="dietPromotionId != null and dietPromotionId != ''">
      AND dpsr.diet_promotion_id =#{dietPromotionId}
    </if>
  </select>

  <select id="dietPromotionBuyGiveList" parameterType="map" resultType="erp.chain.domain.DietPromotionBuyGive">
    SELECT * FROM diet_promotion_buy_give dpsr WHERE is_deleted=0
    <if test="id != null and id != ''">
      AND dpsr.id =#{id}
    </if>
    <if test="dietPromotionId != null and dietPromotionId != ''">
      AND dpsr.diet_promotion_id =#{dietPromotionId}
    </if>
    <if test="tenantId != null and tenantId != ''">
      AND dpsr.tenant_id =${tenantId}
    </if>
    <if test="offset != null and row !=''">
      LIMIT ${offset},${rows}
    </if>
  </select>

  <select id="queryBuyGiveDetailList" resultType="mapUnderscoreToCamelCase">
    <include refid="buyGiveDetailColumn"/>
  </select>
  <sql id="buyGiveDetailColumn">
    <![CDATA[
            SELECT
                    g.id buyGoodsId,g.goods_code buyGoodsCode,IF (
                    g.standard_name IS NULL or g.standard_name="",
                    g.goods_name,
                    concat(g.goods_name,"(",g.standard_name,")")
                    ) buyGoodsName,dpbg.buy_num buyNum,gg.id giveGoodsId,gg.goods_code giveGoodsCode,IF (
                    gg.standard_name IS NULL or gg.standard_name="",
                    gg.goods_name,
                    concat(gg.goods_name,"(",gg.standard_name,")")
                    ) giveGoodsName,dpbg.give_num giveNum
                FROM
                    (diet_promotion_buy_give dpbg
                        INNER JOIN
                    goods g ON dpbg.goods_id = g.id)
                    INNER JOIN
                    goods gg ON dpbg.give_goods_id = gg.id
                  WHERE dpbg.is_deleted = 0 AND dpbg.diet_promotion_id = #{dietPromotionId}
        ]]>
  </sql>

</mapper>